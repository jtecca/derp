#+TITLE: Derp - a simple Slack bot
#+AUTHOR: dptd

* Installation
Derp uses [[https://github.com/dptd/jasa][JASAW]] to communicate with the Slack API.

=git clone https://github.com/dptd/jasaw=

=git clone https://github.com/dptd/derp=

=(ql:quickload :derp)=

* Usage
To create new derp use =(derp:spawn-derp)= function. This functions takes only one argument: derp-config. You can create config by calling =(derp:make-derp-config)=. Config is used to specify informations like derp displayed name, Slack API token etc.

Example below shows how to spawn a new derp.
#+BEGIN_SRC lisp
(setf derp
      (derp:spawn-derp
       (derp:make-derp-config :name "derp"
                              :icon ":robot_face:"
                              :token "YourSlackAPIToken"
                              :id "C01234567"
                              :channel "C01234567"
                              :commands '("cat" "ping"))))
#+END_SRC

And here is how you can make your bot start derping...
#+BEGIN_SRC lisp
(derp:start-derping derp)
#+END_SRC

Check on your channel if derp is alive by writing: =@derp ping= Derp should response with =pong=.

* Supported commands

| command    | description                                      |
|------------+--------------------------------------------------|
| cat        | displays random cat gif                          |
| dog        | displays random dog gif                          |
| joke       | displays random Chuck Norris joke                |
| yes?       | displays random yes, no or maybe gif             |
|------------+--------------------------------------------------|
| randuser   | picks random person from the channel             |
| randnumber | picks random number from 0 to given number       |
| review     | picks two random people from the channel         |
|------------+--------------------------------------------------|
| +help      | displays available commands and the description+ |
| ping       | displays "pong" when alive                       |
| remove     | removes last derp's message                      |

** Queues
In one of our projects we had to deliver some binary files. We couldn't merge them so it was important to deliver one change at a time. This is why *queues* feature was made. User can =lock= and =unlock= specific queue. When one user is done and unlocks the queue then the next person in line gets notified that it is his / her turn.

| command       | description                    |
|---------------+--------------------------------|
| add           | add new queue                  |
| +remove-queue | remove queue+                  |
| rename        | rename queue                   |
| queues        | list all queues                |
|---------------+--------------------------------|
| lock          | add yourself to the queue      |
| unlock        | remove yourself from the queue |
| status        | display status of all queues   |
| kick          | kick someone from the queue    |

#+BEGIN_SRC
@derp queues
@derp add foo
@derp queues
@derp lock foo
@derp status
#+END_SRC

** Requests
Requests feature was created to enable tracking of people requests. Any user can add his / her own request for new derp command.

| command  | description              |
|----------+--------------------------|
| request  | add new request          |
| requests | display current requests |

#+BEGIN_SRC
@derp requests
@derp request quote return random quote
@derp requests
#+END_SRC

* Derponarium
Derponarium is a package which allows to spawn multiple derps (using single Slack API token) on multiple channels. Every derp is running in a separate thread. Derponarium allows to create different derps on different channels. For example you can spawn one derp with support only for commands connected with queues on specific channel and another derp with =cat=, =dog=, =joke= and other funny features on different channel.

#+BEGIN_SRC lisp
(setf derp-queues
      (derp:spawn-derp
       (derp:make-derp-config :name "derp"
                              :icon ":robot_face:"
                              :token "YourSlackAPIToken"
                              :id "C01234567"
                              :channel "C01234567"
                              :commands '("lock" "unlock" "status" "queues"))))

(setf derp-funny
      (derp:spawn-derp
       (derp:make-derp-config :name "derp"
                              :icon ":robot_face:"
                              :token "YourSlackAPIToken"
                              :id "C01234567"
                              :channel "C89012345"
                              :commands '("cat" "dog" "joke" "features"))))

(derponarium:add-derp derp-queues)
(derponarium:add-derp derp-funny)
derponarium:*derps*
(derponarium:start-derp (prehash derp-queues))
(derponarium:start-derp (prehash derp-funny))
#+END_SRC
